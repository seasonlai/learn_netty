----- protobuf使用 -------

1 下载https://github.com/google/protobuf/releases
2 配好环境变量
3 通过命令 protoc -I=源地址 --java_out=目标地址 文件名
  如：protoc -I=D:\learn_netty\src\main\resources --java_out=D:\learn_netty\src\main\java SubscribeReq.proto

------ jibx使用---------

运行GenBindFileTool.java

------ backlog参数------

指定内核为此套接口排队的最大连接数（未连接队列和已完成连接队列之和）
，三次握手成功后，会从未连接队列移到已完成连接队列尾，进程调用accept的时候就会从已完成连接队列取出一个，
已完成队列为空时，进程会睡眠

------ SSL ----------

##生成Netty服务端私钥和证书仓库命令
keytool -genkey -alias securechat -keysize 2048 -validity 365 -keyalg RSA -dname "CN=localhost" -keypass sNetty -storepass sNetty -keystore sChat.jks
##Netty服务端导出签名
keytool -export -alias securechat -keystore sChat.jks -storepass sNetty -file sChat.cer
## 服务端导入仓库
keytool -import -trustcacerts -alias smcc -file cChat.cer -storepass sNetty -keystore sChat.jks


##生成客户端密钥对和证书仓库，用于将服务端的证书保存到客户端的授信证书仓库中
keytool -genkey -alias smcc -keysize 2048 -validity 365 -keyalg RSA -dname "CN=localhost" -keypass cNetty -storepass cNetty -keystore cChat.jks
## 导出签名
keytool -export -alias smcc -keystore cChat.jks -storepass cNetty -file cChat.cer
##客户端导入仓库
keytool -import -trustcacerts -alias securechat -file sChat.cer -storepass cNetty -keystore cChat.jks


